// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlataformaCursos.Infrastructure.Data.Context;

#nullable disable

namespace PlataformaCursos.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240509112002_updateNewMigration")]
    partial class updateNewMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PlataformaCursos.Domain.Entities.TblAnexo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArquivoUrl")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("arquivoUrl");

                    b.Property<int?>("CursoId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("cursoId");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime")
                        .HasColumnName("dataAlteracao");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime")
                        .HasColumnName("dataCriacao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("Tbl_anexo", (string)null);
                });

            modelBuilder.Entity("PlataformaCursos.Domain.Entities.TblCapitulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CursoId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("cursoId");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime")
                        .HasColumnName("dataAlteracao");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime")
                        .HasColumnName("dataCriacao");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("descricao");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("titulo");

                    b.Property<string>("VideoUrl")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("videoUrl");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("Tbl_capitulo", (string)null);
                });

            modelBuilder.Entity("PlataformaCursos.Domain.Entities.TblCategoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("Tbl_categoria", (string)null);
                });

            modelBuilder.Entity("PlataformaCursos.Domain.Entities.TblCurso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime")
                        .HasColumnName("dataAlteracao");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime")
                        .HasColumnName("dataCriacao");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("descricao");

                    b.Property<string>("ImagemUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("imagemUrl");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("preco");

                    b.Property<bool>("Publicado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("publicado");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("titulo");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("usuarioId");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Tbl_curso", (string)null);
                });

            modelBuilder.Entity("PlataformaCursos.Domain.Entities.TblCursoCategoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int")
                        .HasColumnName("categoriaId");

                    b.Property<int>("CursoId")
                        .HasColumnType("int")
                        .HasColumnName("cursoId");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("CursoId");

                    b.ToTable("Tbl_cursoCategoria", (string)null);
                });

            modelBuilder.Entity("PlataformaCursos.Domain.Entities.TblMatricula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CursoId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("cursoId");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime")
                        .HasColumnName("dataAlteracao");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime")
                        .HasColumnName("dataCriacao");

                    b.Property<int?>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("usuarioId");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Tbl_matricula", (string)null);
                });

            modelBuilder.Entity("PlataformaCursos.Domain.Entities.TblMatriculaCapitulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CapituloId")
                        .HasColumnType("int")
                        .HasColumnName("capituloId");

                    b.Property<bool>("Completo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("completo");

                    b.Property<int>("MatriculaId")
                        .HasColumnType("int")
                        .HasColumnName("matriculaId");

                    b.HasKey("Id");

                    b.HasIndex("CapituloId");

                    b.HasIndex("MatriculaId");

                    b.ToTable("Tbl_matriculaCapitulo", (string)null);
                });

            modelBuilder.Entity("PlataformaCursos.Domain.Entities.TblUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("ativo");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime")
                        .HasColumnName("dataAlteracao");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime")
                        .HasColumnName("dataCriacao");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<bool>("IsProfessor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isProfessor");

                    b.Property<byte[]>("SenhaHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("SenhaSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("Tbl_usuario", (string)null);
                });

            modelBuilder.Entity("PlataformaCursos.Domain.Entities.TblAnexo", b =>
                {
                    b.HasOne("PlataformaCursos.Domain.Entities.TblCurso", "Curso")
                        .WithMany("Anexo")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("PlataformaCursos.Domain.Entities.TblCapitulo", b =>
                {
                    b.HasOne("PlataformaCursos.Domain.Entities.TblCurso", "Curso")
                        .WithMany("Capitulo")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("PlataformaCursos.Domain.Entities.TblCurso", b =>
                {
                    b.HasOne("PlataformaCursos.Domain.Entities.TblUsuario", "Usuario")
                        .WithMany("Curso")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PlataformaCursos.Domain.Entities.TblCursoCategoria", b =>
                {
                    b.HasOne("PlataformaCursos.Domain.Entities.TblCategoria", "Categoria")
                        .WithMany("CursoCategoria")
                        .HasForeignKey("CategoriaId")
                        .IsRequired();

                    b.HasOne("PlataformaCursos.Domain.Entities.TblCurso", "Curso")
                        .WithMany("CursoCategoria")
                        .HasForeignKey("CursoId")
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("PlataformaCursos.Domain.Entities.TblMatricula", b =>
                {
                    b.HasOne("PlataformaCursos.Domain.Entities.TblCurso", "Curso")
                        .WithMany("Matricula")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlataformaCursos.Domain.Entities.TblUsuario", "Usuario")
                        .WithMany("Matricula")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PlataformaCursos.Domain.Entities.TblMatriculaCapitulo", b =>
                {
                    b.HasOne("PlataformaCursos.Domain.Entities.TblCapitulo", "Capitulo")
                        .WithMany("MatriculaCapitulo")
                        .HasForeignKey("CapituloId")
                        .IsRequired();

                    b.HasOne("PlataformaCursos.Domain.Entities.TblMatricula", "Matricula")
                        .WithMany("MatriculaCapitulo")
                        .HasForeignKey("MatriculaId")
                        .IsRequired();

                    b.Navigation("Capitulo");

                    b.Navigation("Matricula");
                });

            modelBuilder.Entity("PlataformaCursos.Domain.Entities.TblCapitulo", b =>
                {
                    b.Navigation("MatriculaCapitulo");
                });

            modelBuilder.Entity("PlataformaCursos.Domain.Entities.TblCategoria", b =>
                {
                    b.Navigation("CursoCategoria");
                });

            modelBuilder.Entity("PlataformaCursos.Domain.Entities.TblCurso", b =>
                {
                    b.Navigation("Anexo");

                    b.Navigation("Capitulo");

                    b.Navigation("CursoCategoria");

                    b.Navigation("Matricula");
                });

            modelBuilder.Entity("PlataformaCursos.Domain.Entities.TblMatricula", b =>
                {
                    b.Navigation("MatriculaCapitulo");
                });

            modelBuilder.Entity("PlataformaCursos.Domain.Entities.TblUsuario", b =>
                {
                    b.Navigation("Curso");

                    b.Navigation("Matricula");
                });
#pragma warning restore 612, 618
        }
    }
}
